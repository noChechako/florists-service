{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Florists",
    "description": "Florists Application API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "API for florists"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "post": {
        "summary": "Create user",
        "tags": [
          "User"
        ],
        "description": "Create new user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Create user",
            "schema": {
              "$ref": "#/components/schemas/UserInput"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/components/schemas/UserOutput"
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "examples": {
                  "UserNotFound": {
                    "$ref": "#/components/examples/UserNotFoundException"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "Unauthorized": {
                    "$ref": "#/components/examples/UnauthorizedException"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "InternalServerError": {
                    "$ref": "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of user",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/UserOutput"
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "examples": {
                  "UserNotFound": {
                    "$ref": "#/components/examples/UserNotFoundException"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "Unauthorized": {
                    "$ref": "#/components/examples/UnauthorizedException"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "InternalServerError": {
                    "$ref": "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/components/schemas/UserOutput"
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "examples": {
                  "UserNotFound": {
                    "$ref": "#/components/examples/UserNotFoundException"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "Unauthorized": {
                    "$ref": "#/components/examples/UnauthorizedException"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "InternalServerError": {
                    "$ref": "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/components/schemas/UserInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/components/schemas/UserOutput"
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "examples": {
                  "UserNotFound": {
                    "$ref": "#/components/examples/UserNotFoundException"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "Unauthorized": {
                    "$ref": "#/components/examples/UnauthorizedException"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "InternalServerError": {
                    "$ref": "#/components/examples/InternalServerError"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserOutput": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "USER"
            ]
          }
        }
      },
      "UserInput": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "USER"
            ]
          }
        }
      }
    },
    "examples": {
      "UserNotFoundException": {
        "value": {
          "code": "UserNotFoundException",
          "message": "User with id 632add196a27c57f3ecf1ab2 not found"
        }
      },
      "UnauthorizedException": {
        "value": {
          "code": "UnauthorizedException",
          "message": "Unauthorized"
        }
      },
      "InternalServerError": {
        "value": {
          "code": "InternalServerError",
          "message": "Internal server error"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
